# https://taskfile.dev

version: '3'

vars:
  GREETING: Hello, World!

tasks:
  install:
    dir: iac/crossplane
    cmds:
      - helm repo add crossplane-stable https://charts.crossplane.io/stable && helm repo update
      - helm install crossplane --namespace crossplane-system --create-namespace crossplane-stable/crossplane
      - kubectl -n crossplane-system wait deployment crossplane --for=condition=Available --timeout=180s
      - kubectl get pods -n crossplane-system
      - kubectl get deployments -n crossplane-system
  create-secret:
    cmds:
      - kubectl create secret generic aws-secret -n crossplane-system --from-file=creds=./aws_creds.txt
      - kubectl create secret generic gcp-secret -n crossplane-system --from-file=creds=./gcp-credentials.json
  create-gcp-provider:
    dir: iac/crossplane
    cmds:
      - kubectl apply -f gcpProvider.yaml
      - kubectl wait "providers.pkg.crossplane.io/provider-gcp" --for=condition=Installed --timeout=180s
      - kubectl wait "providers.pkg.crossplane.io/provider-gcp" --for=condition=Healthy --timeout=180s
      - kubectl get providers
      - kubectl apply -f gcpProviderConfig.yaml
  create-resources:
    dir: iac/crossplane
    cmds:
      - kubectl apply -f artifactory.yaml
  info:
    cmds:
      - kubectl get RegistryRepository
      - kubectl delete RegistryRepository --selector testing.upbound.io/example-name=container-repo

  get-buckets:
    cmds:
      - kubectl get bucket
  delete-schemas:
    cmds:
      - kubectl delete schema --selector testing.upbound.io/example-name=trigger
  delete-bucket:
    cmds:
      - kubectl delete bucket --selector docs.crossplane.io/example=provider-gcp
  delete-schema:
    cmds:
      - kubectl delete schema --selector testing.upbound.io/example-name=schema
  get-xrd:
    cmds:
      - kubectl get TopicBucket -n test
      - kubectl get topicbucket -A
      - kubectl get xtopicbucket
      - kubectl get xrd
      - kubectl get composite
      - kubectl get composition
      - kubectl get xdatasetwithbucket
  delete-composite:
    cmds:
      - kubectl delete XTopicBucket my-second-composite-resource
      - kubectl delete xtopicbucket my-composite-resource
  delete-claim:
    cmds:
      - kubectl delete topicbucket claimed-topic-with-bucket -n test
      - kubectl delete topicbucket second-claimed-topic-with-bucket -n test2
